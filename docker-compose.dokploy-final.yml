services:
  cap-web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        - NEXT_PUBLIC_DOCKER_BUILD=true
    environment:
      # ---- Core Application URLs ----
      WEB_URL: ${WEB_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}

      # ---- Public Environment Variables (Client-side) ----
      NEXT_PUBLIC_WEB_URL: ${WEB_URL}
      NEXT_PUBLIC_CAP_AWS_BUCKET: ${CAP_AWS_BUCKET}
      NEXT_PUBLIC_CAP_AWS_REGION: ${CAP_AWS_REGION}
      NEXT_PUBLIC_DOCKER_BUILD: "true"

      # ---- Database ----
      DATABASE_URL: ${DATABASE_URL}

      # ---- S3/MinIO Storage Configuration ----
      CAP_AWS_BUCKET: ${CAP_AWS_BUCKET}
      CAP_AWS_REGION: ${CAP_AWS_REGION}
      CAP_AWS_ACCESS_KEY: ${CAP_AWS_ACCESS_KEY}
      CAP_AWS_SECRET_KEY: ${CAP_AWS_SECRET_KEY}
      CAP_AWS_ENDPOINT: ${CAP_AWS_ENDPOINT}
      CAP_AWS_BUCKET_URL: ${CAP_AWS_ENDPOINT}/${CAP_AWS_BUCKET}

      # ---- AWS/S3 Compatibility Aliases ----
      AWS_ACCESS_KEY_ID: ${CAP_AWS_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${CAP_AWS_SECRET_KEY}
      AWS_REGION: ${CAP_AWS_REGION}
      S3_ENDPOINT: ${CAP_AWS_ENDPOINT}
      S3_REGION: ${CAP_AWS_REGION}
      S3_BUCKET: ${CAP_AWS_BUCKET}
      S3_ACCESS_KEY_ID: ${CAP_AWS_ACCESS_KEY}
      S3_SECRET_ACCESS_KEY: ${CAP_AWS_SECRET_KEY}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE}
      AWS_S3_FORCE_PATH_STYLE: ${AWS_S3_FORCE_PATH_STYLE}
      FORCE_PATH_STYLE: ${FORCE_PATH_STYLE}
      AWS_SIGNATURE_VERSION: ${AWS_SIGNATURE_VERSION}
      AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}

      # ---- Email Configuration ----
      RESEND_API_KEY: ${RESEND_API_KEY}
      EMAIL_FROM: ${EMAIL_FROM}
      RESEND_FROM_DOMAIN: updates.infiniteautomation.com

      # ---- MySQL Database Variables (for compatibility) ----
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

    expose:
      - "3000"
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  dokploy-network:
    external: true